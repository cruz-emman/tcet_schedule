// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id       String   @id @default(cuid())
  name     String?
  email    String   @unique
  password String?
  role     UserRole @default(USER)

  appointment Appointment[]
}

model Appointment {
  id String @id @default(uuid())

  //SET 1
  title          String
  email          String
  fullname       String
  contact_person String
  department     String
  venue          String?

  //SET 2

  event_date DateTime

  start_time String
  end_time   String
  purpose    String

  does_have_dry_run    Boolean   @default(false)
  dry_run_date         DateTime?
  dry_run_start_time   String?
  dry_run_end_time     String?
  does_have_assistance String
  name_of_assistance   Json?

  meeting_type_option  String?
  meeting_type_service String?
  reminder             String?
  panelist             Json?
  meeting_type_link    String?
  camera_setup         String?
  status               String

  other_training String?

  soft_delete Boolean @default(false)
  editedBy    String?

  createdAt DateTime @default(now())
  updateAt  DateTime @default(now())

  scheduleDate   ScheduleDate[]
  User           User[]
  additonalDates AdditionalDates[]
}

model ScheduleDate {
  id String @id @default(uuid())

  day   Int
  month Int
  year  Int

  soft_delete_scheduleDate Boolean @default(false)

  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  @@index([appointmentId])
}

model AdditionalDates {
  additonalDateId String @id @default(uuid())

  additional_date   DateTime
  additional_start  String
  additional_end    String
  additional_status String

  appointmentId String
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  @@index([appointmentId, additonalDateId])
}
